BEGIN TRANSACTION;



CREATE TABLE "Location"
(
  "locationId" serial NOT NULL,
  "locationName" character varying NOT NULL,
  "locationCode" character varying(10) NOT NULL,
  "regionName" character varying NOT NULL,
  "regionCode" character varying(4) NOT NULL,
  
  PRIMARY KEY ("locationId"),
  UNIQUE ("locationCode"),
  UNIQUE ("locationName")
);






CREATE TABLE "Players"
(
  "playerId" serial NOT NULL,
  "playerName" character varying NOT NULL,
  "playerLastName" character varying NOT NULL,
  "playerNickname" character varying NOT NULL,
  "locationId" serial NOT NULL,
  
  PRIMARY KEY ("playerId"),
  FOREIGN KEY ("locationId") REFERENCES "Location",
  UNIQUE ("playerNickname")
);






CREATE TABLE "Users"
(
  "userId" serial NOT NULL,
  "playerId" serial NOT NULL,
  "userName" character varying NOT NULL,
  "emailAddress" character varying NOT NULL,
  "passwordHash" character varying(100) NOT NULL,
  "role" integer NOT NULL DEFAULT 0,
  
  PRIMARY KEY ("userId"),
  FOREIGN KEY ("playerId") REFERENCES "Players",
  UNIQUE ("emailAddress"),
  UNIQUE ("userName")
);






CREATE TABLE "Characters"
(
  "characterId" serial NOT NULL,
  "characterName" character varying NOT NULL,
  
  PRIMARY KEY ("characterId"),
  UNIQUE ("characterName")
);






CREATE TABLE "Items"
(
  "itemId" serial NOT NULL,
  "itemName" character varying NOT NULL,
  
  PRIMARY KEY ("itemId"),
  UNIQUE ("itemName")
);






CREATE TABLE "Stages"
(
  "stageId" serial NOT NULL,
  "stageName" character varying NOT NULL,
  
  PRIMARY KEY ("stageId"),
  UNIQUE ("stageName")
);






CREATE TABLE "Rulesets"
(
  "rulesetId" serial NOT NULL,
  "rulesetName" character varying NOT NULL,
  "matchType" character varying NOT NULL DEFAULT '1v1',
  "matchMode" character varying NOT NULL DEFAULT 'Stocks',
  "numberStocks" integer NOT NULL DEFAULT 4,
  "numberTimer" interval NOT NULL DEFAULT 8,
  "itemRate" character varying NOT NULL DEFAULT 'None',
  "specialRules" character varying,
  
  PRIMARY KEY ("rulesetId"),
  UNIQUE ("rulesetName")
);








CREATE TABLE "Finances"
{
  "financesId" serial NOT NULL,
  "entryFee" float NOT NULL,
  "grossMoney" float,
  "houseCut" float,
  "distributionModel" character varying,
  "averageExpenses" float,
  "firstPlaceWinnings" float,
  "secondPlaceWinnings" float,
  "thirdPlaceWinnings" float,
  "fourthPlaceWinnings" float,
  "fifthPlaceWinnings" float,
  "sixthPlaceWinnings" float,
  "seventhPlaceWinnings" float,
  "eigthPlaceWinnings" float,
  "netGain" float,

  PRIMARY KEY ("financesId")
}









CREATE TABLE "Organization"
{
  "organizationId" serial NOT NULL,
  "tournamentId" serial NOT NULL,
  "organizationNumber" integer,
  "roundStyle" character varying DEFAULT 'Double-Elimination',
  "numberEntrants" integer,
  "numberStations" integer,
  "duration" interval,

  PRIMARY KEY ("organizationId"),
  FOREIGN KEY ("tournamentId") REFERENCES "Tournaments"
}








CREATE TABLE "Rounds"
{
  "roundId" serial NOT NULL,
  "organizationId" serial NOT NULL,
  "roundNumber" integer NOT NULL,
  "numberEntrants" integer NOT NULL,
  "duration" interval,
  

  PRIMARY KEY ("organizationId"),
  FOREIGN KEY ("organizationId") REFERENCES "Organization"
}







CREATE TABLE "Tournaments"
(
  "tournamentId" serial NOT NULL,
  "tournamentName" character varying NOT NULL,
  "locationId" serial NOT NULL,
  "startDate" date NOT NULL,
  "endDate" date,
  "rulesetId" serial NOT NULL,
  "financesId" serial NOT NULL,
  "totalEntrants" integer,
  "totalDuration" interval,
  
  PRIMARY KEY ("tournamentId"),
  FOREIGN KEY ("locationId") REFERENCES "Location",
  FOREIGN KEY ("rulesetId") REFERENCES "Rulesets"
  FOREIGN KEY ("financesId") REFERENCES "Finances"
);






CREATE TABLE "Tournament_Players"
(
  "tournamentId" serial NOT NULL,
  "playerId" serial NOT NULL,
  "placing" character varying,
  
  PRIMARY KEY ("tournamentId", "playerId"),
  FOREIGN KEY ("tournamentId") REFERENCES "Tournaments",
  FOREIGN KEY ("playerId") REFERENCES "Players"
);






CREATE TABLE "Tournament_Organizers"
(
  "tournamentId" serial NOT NULL,
  "userId" serial NOT NULL,
  "job" character varying,
  
  PRIMARY KEY ("tournamentId", "userId"),
  FOREIGN KEY ("tournamentId") REFERENCES "Tournaments",
  FOREIGN KEY ("userId") REFERENCES "Users"
);






CREATE TABLE "Tournament_Stages"
(
  "tournamentId" serial NOT NULL,
  "stageId" serial NOT NULL,
  "stageStatus" integer NOT NULL DEFAULT 2,
  
  PRIMARY KEY ("tournamentId", "stageId"),
  FOREIGN KEY ("tournamentId") REFERENCES "Tournaments",
  FOREIGN KEY ("stageId") REFERENCES "Stages"
);






CREATE TABLE "Tournament_Characters"
(
  "tournamentId" serial NOT NULL,
  "characterId" serial NOT NULL,
  "characterStatus" integer NOT NULL DEFAULT 2,
  
  PRIMARY KEY ("tournamentId", "characterId"),
  FOREIGN KEY ("tournamentId") REFERENCES "Tournaments",
  FOREIGN KEY ("characterId") REFERENCES "Characters"
);






CREATE TABLE "Tournament_Items"
(
  "tournamentId" serial NOT NULL,
  "itemId" serial NOT NULL,
  "itemStatus" integer NOT NULL DEFAULT 0,
  
  PRIMARY KEY ("tournamentId", "itemId"),
  FOREIGN KEY ("tournamentId") REFERENCES "Tournaments",
  FOREIGN KEY ("itemId") REFERENCES "Items"
);






CREATE TABLE "Matches"
(
  "matchId" serial NOT NULL,
  "tournamentId" serial NOT NULL,
  "roundId" character varying NOT NULL,
  "previousMatch" serial,
  "nextMatch" serial,
  "player1" serial NOT NULL,
  "player2" serial NOT NULL,
  "player3" serial,
  "player4" serial,
  "winner1" serial NOT NULL,
  "winner2" serial,
  "comments" character varying,
  
  PRIMARY KEY ("matchId"),
  FOREIGN KEY ("tournamentId") REFERENCES "Tournaments",
  FOREIGN KEY ("roundId") REFERENCES "Rounds",
  FOREIGN KEY ("previousMatch") REFERENCES "Matches" ("matchId"),
  FOREIGN KEY ("nextMatch") REFERENCES "Matches" ("matchId"),
  FOREIGN KEY ("player1") REFERENCES "Players" ("playerId"),
  FOREIGN KEY ("player2") REFERENCES "Players" ("playerId"),
  FOREIGN KEY ("player3") REFERENCES "Players" ("playerId"),
  FOREIGN KEY ("player4") REFERENCES "Players" ("playerId"),
  FOREIGN KEY ("winner1") REFERENCES "Players" ("playerId"),
  FOREIGN KEY ("winner2") REFERENCES "Players" ("playerId")
);







CREATE TABLE "Games"
(
  "gameId" serial NOT NULL,
  "matchId" serial NOT NULL,
  "gameNumber" integer NOT NULL,
  "characterPlayer1" serial NOT NULL,
  "characterPlayer2" serial NOT NULL,
  "characterPlayer3" serial,
  "characterPlayer4" serial,
  "stage" character varying NOT NULL,
  "stagePicker1" serial NOT NULL,
  "stagePicker2" serial,
  "player1StocksLeft" integer DEFAULT 0,
  "player2StocksLeft" integer DEFAULT 0,
  "player3StocksLeft" integer DEFAULT 0,
  "player4StocksLeft" integer DEFAULT 0,
  "player1Percentage" integer,
  "player2Percentage" integer,
  "player3Percentage" integer,
  "player4Percentage" integer,
  "timeLeft" interval NOT NULL,
  "winner1" serial NOT NULL,
  "winner2" serial,
  "link" character varying,
  "comments" character varying,
  
  PRIMARY KEY ("gameId"),
  FOREIGN KEY ("matchId") REFERENCES "Matches",
  FOREIGN KEY ("characterPlayer1") REFERENCES "Characters" ("characterId"),
  FOREIGN KEY ("characterPlayer2") REFERENCES "Characters" ("characterId"),
  FOREIGN KEY ("characterPlayer3") REFERENCES "Characters" ("characterId"),
  FOREIGN KEY ("characterPlayer4") REFERENCES "Characters" ("characterId"),
  FOREIGN KEY ("stagePicker1") REFERENCES "Characters" ("characterId"),
  FOREIGN KEY ("stagePicker2") REFERENCES "Characters" ("characterId"),
  FOREIGN KEY ("winner1") REFERENCES "Characters" ("characterId"),
  FOREIGN KEY ("winner2") REFERENCES "Characters" ("characterId")
);






CREATE TABLE "Striked_Stages"
(
  "gameId" serial NOT NULL,
  "stageId" serial NOT NULL,
  "playerId" serial NOT NULL,
  
  PRIMARY KEY ("gameId", "stageId"),
  FOREIGN KEY ("gameId") REFERENCES "Games",
  FOREIGN KEY ("stageId") REFERENCES "Stages",
  FOREIGN KEY ("playerId") REFERENCES "Players"
);






CREATE TABLE "Striked_Characters"
(
  "gameId" serial NOT NULL,
  "characterId" serial NOT NULL,
  "playerId" serial NOT NULL,
  
  PRIMARY KEY ("gameId", "characterId"),
  FOREIGN KEY ("gameId") REFERENCES "Games",
  FOREIGN KEY ("characterId") REFERENCES "Characters",
  FOREIGN KEY ("playerId") REFERENCES "Players"
);







CREATE TABLE "Striked_Items"
(
  "gameId" serial NOT NULL,
  "itemId" serial NOT NULL,
  "playerId" serial NOT NULL,
  
  PRIMARY KEY ("gameId", "itemId"),
  FOREIGN KEY ("gameId") REFERENCES "Games",
  FOREIGN KEY ("itemId") REFERENCES "Items",
  FOREIGN KEY ("playerId") REFERENCES "Players"
);







CREATE TABLE "GlickoData"
(
  "glickoId" serial NOT NULL ,
  "volatility" numeric NOT NULL DEFAULT 0.06,
  "RD" numeric NOT NULL DEFAULT 350,
  "rating" numeric NOT NULL DEFAULT 1500,
  "playerId" serial NOT NULL ,
  "teammateId" serial,
  
  PRIMARY KEY ("glickoId"),
  FOREIGN KEY ("playerId") REFERENCES "Players",
  FOREIGN KEY ("teammateId") REFERENCES "Players" ("playerId")
);







CREATE TABLE "CharacterGlickoData"
(
  "characterGlickoId" serial NOT NULL ,
  "volatility" numeric NOT NULL DEFAULT 0.06,
  "RD" numeric NOT NULL DEFAULT 350,
  "rating" numeric NOT NULL DEFAULT 1500,
  "characterId" serial NOT NULL ,
  "playerId" serial NOT NULL ,
  "teammateId" serial,
  "teammateCharacter" serial,
  
  PRIMARY KEY ("characterGlickoId"),
  FOREIGN KEY ("characterId") REFERENCES "Characters",
  FOREIGN KEY ("playerId") REFERENCES "Players",
  FOREIGN KEY ("teammateCharacter") REFERENCES "Characters" ("characterId"),
  FOREIGN KEY ("teammateId") REFERENCES "Players" ("playerId")
);








CREATE TABLE "StageGlickoData"
(
  "stageGlickoId" serial NOT NULL ,
  "volatility" numeric NOT NULL DEFAULT 0.06,
  "RD" numeric NOT NULL DEFAULT 350,
  "rating" numeric NOT NULL DEFAULT 1500,
  "stageId" serial NOT NULL ,
  "playerId" serial NOT NULL ,
  "teammateId" serial,
  
  PRIMARY KEY ("stageGlickoId"),
  FOREIGN KEY ("stageId") REFERENCES "Stages",
  FOREIGN KEY ("playerId") REFERENCES "Players",
  FOREIGN KEY ("teammateId") REFERENCES "Players" ("playerId")
);








CREATE TABLE "Game_Stats"
(
  "player1" serial NOT NULL,
  "player2" serial NOT NULL,
  "character1" serial NOT NULL,
  "character2" serial NOT NULL,
  "stageId" serial NOT NULL,
  "totalMatches" integer,
  "totalWins" integer,
  "winPercentage" integer,
  "averageStocks" numeric,
  "enemyStocks" numeric,
  "averagePercentage" numeric,
  "enemyPercentage" numeric,
  "averageTimer" interval,

  PRIMARY KEY ("player1", "player2", "character1", "character2", "stageId"),
  FOREIGN KEY ("player1") REFERENCES "Players" ("playerId"),
  FOREIGN KEY ("player2") REFERENCES "Players" ("playerId"),
  FOREIGN KEY ("character1") REFERENCES "Characters" ("characterId"),
  FOREIGN KEY ("character2") REFERENCES "Characters" ("characterId"),
  FOREIGN KEY ("stageId") REFERENCES "Stages"
);







CREATE TABLE "Stage_Stats"
(
  "stageId" serial NOT NULL,
  "playerId" serial NOT NULL,
  "characterId" serial NOT NULL,
  "totalMatches" integer,
  "totalOpportunities" integer,
  "opportunityPercentage" integer,
  "totalPicks" integer,
  "pickPercentage" integer,
  "totalStrikes" integer,
  "strikePercentage" integer,

  PRIMARY KEY ("playerId", "characterId", "stageId"),
  FOREIGN KEY ("playerId") REFERENCES "Players",
  FOREIGN KEY ("characterId") REFERENCES "Characters",
  FOREIGN KEY ("stageId") REFERENCES "Stages"
);









COMMIT;